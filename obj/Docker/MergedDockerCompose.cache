name: dockercompose5383602107787189178
services:
  adminer:
    image: adminer
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8084"
        protocol: tcp
    restart: always
  crud:
    build:
      context: C:\Users\Owner\Documents\HRMS\MY FILES\.net-crud
      dockerfile: Crud/Dockerfile
    depends_on:
      sqlserver:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__DefaultConnection: Server=sqlserver;Database=SP_EmployeesDB;User Id=sa;Password=Aug151973!;TrustServerCertificate=True
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8083"
        protocol: tcp
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "8081"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Owner\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Owner\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  sqlserver:
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
      SA_PASSWORD: Aug151973!
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: sql_data
        target: /var/opt/mssql
        volume: {}
networks:
  default:
    name: dockercompose5383602107787189178_default
volumes:
  sql_data:
    name: dockercompose5383602107787189178_sql_data